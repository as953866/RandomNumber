<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAAAAAAAD/4QCuRXhpZgAATU0AKgAAAAgAAYdpAAQAAAABAAAAGgAAAAAAAZKG
        AAcAAAB6AAAALAAAAABVTklDT0RFAABDAFIARQBBAFQATwBSADoAIABnAGQALQBqAHAAZQBnACAAdgAx
        AC4AMAAgACgAdQBzAGkAbgBnACAASQBKAEcAIABKAFAARQBHACAAdgA2ADIAKQAsACAAcQB1AGEAbABp
        AHQAeQAgAD0AIAA3ADUACv/bAEMACAYGBwYFCAcHBwkJCAoMFA0MCwsMGRITDxQdGh8eHRocHCAkLicg
        IiwjHBwoNyksMDE0NDQfJzk9ODI8LjM0Mv/bAEMBCQkJDAsMGA0NGDIhHCEyMjIyMjIyMjIyMjIyMjIy
        MjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMv/AABEIAMMBNAMBIgACEQEDEQH/xAAfAAAB
        BQEBAQEBAQAAAAAAAAAAAQIDBAUGBwgJCgv/xAC1EAACAQMDAgQDBQUEBAAAAX0BAgMABBEFEiExQQYT
        UWEHInEUMoGRoQgjQrHBFVLR8CQzYnKCCQoWFxgZGiUmJygpKjQ1Njc4OTpDREVGR0hJSlNUVVZXWFla
        Y2RlZmdoaWpzdHV2d3h5eoOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK
        0tPU1dbX2Nna4eLj5OXm5+jp6vHy8/T19vf4+fr/xAAfAQADAQEBAQEBAQEBAAAAAAAAAQIDBAUGBwgJ
        Cgv/xAC1EQACAQIEBAMEBwUEBAABAncAAQIDEQQFITEGEkFRB2FxEyIygQgUQpGhscEJIzNS8BVictEK
        FiQ04SXxFxgZGiYnKCkqNTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqCg4SFhoeI
        iYqSk5SVlpeYmZqio6Slpqeoqaqys7S1tre4ubrCw8TFxsfIycrS09TV1tfY2dri4+Tl5ufo6ery8/T1
        9vf4+fr/2gAMAwEAAhEDEQA/APf6KKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKA
        CiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKA
        CiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKA
        CiiigAooooAKKKKACiiigAoopKAFooooAKKSloAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiii
        gAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKSgBaKKSgBaKKKACiiigAoo
        ooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiquo6ja
        aTYS31/OsFtEAXkbouTj+Zqto3iHSfEEcsmk30d0kRCuUz8pPTqKdna4rq9jTooopDCiisHTPGfh3WdQ
        Fhp+qwXF0QSI0zkgde1NJvYTaW5vUUUUhhRRRQAUUUUAFFFFABRRRQAUUUUAFFFVb/UbPS7cT3s6wxFg
        oZvX0/Smk27ITairvYtUVRt9Y0+7sJb6C6R7WLO+QZwuBk/pTdP1zTdWd0sbyOdkGWC54FPklrpsSqsG
        0k1rt5mhRRRUlhRRRQAUUUUAFFFFABRRRQAUUUUAUr/V9P0sKb68ig3fdDtyfwqh/wAJj4e/6CsH6/4V
        594ysNR1Txjfi2glnSERr8o4QbAcZ+pNZJ8KauunT3clpLH5TAeWyHcwPcewr0qeDpOCc56s8GtmmJjV
        lGnTulfv0PWU8XaBI6ouqQFmOAOeT+VLrXizQ/DssUWrX6WryqWQOjHcB15ANeQRaLqdnNb3NxYzxQ+a
        nzshAGSMZ9K734seGv7f8HSzQpuu7DM8WByV/jH5c/gKyrYenTlFKV0zqwWNrV4zc42at3Ox07UbTVrC
        K+sJ1ntpRlJF6HnFN1PVLLRtPkvtRuEt7aPG+Rs4GTgdPc15V8C/EPm2V7oEz/NCftEAJ/hPDAfQ4P4m
        qvx18RZex8PQP93/AEm4APfkIP8A0I4+lY+wftfZnb7b93znb6r4g8IeLfDGp28ur7tPjVDdSxKwMYLD
        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
        yltcxIEYSHAbAxkGovFnjPTY9JuLSxuEubidDGPLOVUHgkmq1r4J8Na9bLfadcXMUT5yiuDtPoQQSKsX
        3h7w/wCFdEvLkrvuGhZI3nYMxYjA2j/61FsP7S6ve+w+bG+wtJx5bfFfoYHwwGddvAe9qf8A0JaworK0
        07xYbPWY2+ypMySYJHBzhsjnHQ10fwutpDqd9c4PlrCI8+5IP9K7TXvCuneIFDXKtHOows0fDY9D6itq
        uIVPEST2aWxyYfBSr4KnKO8W2r7PUoReBfC88KyxW5kjYZDrcMQR9c1zuqQeBNKvfsj2lzcSD732eUsA
        fTO4c1M3wulDYi1ghPQxHP8AOtvQ/AOm6RcLcyu13cIcqZBhVPqB6/Wsvawjq6jflqjq+r1aloqhGPdu
        z/A3tItbez0m2gtIZIIAm5YpD8y55weTzzRV2ivPbu7s9qMVFJLoY1zpM73t1fW7JHdh1a3kPRhtAZG/
        2Tj+R7Vl6HpWpaZb7J4bneyxZFvOmwFY1Uj5sHqDXXUU+Z2sLlW5y82gXks16f3QSAmXTMt92RmEjbvQ
        b1A+hIq75GqWfh9Y7SNH1GVi8zbhhGclnYZ64JIA+lbdFHMw5UcrFpV1BeWssNldxRxQyo7LPH5kjuyN
        uYk852nP4U+90LUNVlM5ujatDGqWwlQSMGDB95IPBLKo+i+9dPRRzsORGFZNqttZTodNP2iSSSRSJUKA
        sSRk5zjn0rPTwxe2pRBcRXcM3lLcq8YTJWQPvPJ3E5cH6j0rraKOdhyo5W70TUIryFbZFnsrYAwKXAdR
        50TmPnjAEZwc9wO2TqWdvdSazNqFxALdTAsKR7wzNhiSTjjvxz61rUUczDlVwoooqShKWiigAoopKAFo
        oooAKKKKACiiigAooooAKKKKACiiigAooooAKoato9nrdkbW9i3pnKkHDKfUGr9FNNxd0TKMZJxkrpnn
        svwyaJ2ax1iWIHoGTn8SD/Slg+GIkkV7/VpZgOqomD+ZJ/lXoNFdH1yt3/I4v7Mwt/h/F/5lPTdMtNJs
        1tbKIRxLzjuT6k9zVyiiudtt3Z3Rioqy2CiiikMKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiii
        gAooooAKKKKACiikoAWiiigAooooAKKKKACiiigAooooAKKSloAKKKKACiiigAooooAKKKKACiiigAoo
        ooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKAEpaKSgBaSlooAKKKKAEpaKKAEpaKSgBaSlooAKKS
        loAKSlpKACloooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigApKKWgB
        KKWkoAWkpaKAEpaSloASilpKAFoopKACilooAKKKKAEpaKKACkpaKACiiigAooooAKKKKACiiigAoooo
        AKKKKACiiigAooooAKKKKACiiigApKWigAoopKAFooooASloooAKSlpKAFooooASloooAKKKKACiiigB
        KWiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKA
        CiiigAooooAKKKKACiiigAooooAKKKKACiiigD//2Q==
</value>
  </data>
</root>